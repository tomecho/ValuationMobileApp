import { identifyRequest } from "./identityService";

describe("identityWrapperService", () => {
  const fakeImage = "";

  it("returns single suggestion string", async () => {
    const suggestion = await identifyRequest(fakeImage);
    expect(suggestion).toEqual(expect.any(String))
  });

  it("throws when passed invalid image", () => {
    return new Promise((resolve, reject) => {
      identifyRequest("notanimage")
        .then(reject)
        .catch(resolve);
    });
  })
});
